extends Node2D
const StringUtils = preload("../StringUtils.gd")
const Chronos = preload("../Chronos.gd")



func p(text: String, v):
	print(StringUtils.padr(text, 50, ".") + str(v))

# Called when the node enters the scene tree for the first time.
func _ready():
	p("now_sec():", Chronos.now_sec())
	p("now_mil():", Chronos.now_mil())
	p("now_mic():", Chronos.now_mic())
	p("now_nan():", Chronos.now_nan())
	print("")
	p("tz_offset_min():", Chronos.tz_offset_min())
	p("tz_offset_sec():", Chronos.tz_offset_sec())
	p("tz_offset_mil():", Chronos.tz_offset_mil())
	p("tz_offset_mic():", Chronos.tz_offset_mic())
	p("tz_offset_nan():", Chronos.tz_offset_nan())
	print("")
	p("local_now_sec():", Chronos.local_now_sec())
	p("local_now_mil():", Chronos.local_now_mil())
	p("local_now_mic():", Chronos.local_now_mic())
	p("local_now_nan():", Chronos.local_now_nan())
	print("")
	var now = Chronos.now_sec()
	p("mil(now):", Chronos.mil(now))
	p("mic(now):", Chronos.mic(now))
	p("nan(now):", Chronos.nan(now))
	print("")
	var local_now = Chronos.local_now_sec()
	p("mil(local_now):", Chronos.mil(local_now))
	p("mic(local_now):", Chronos.mic(local_now))
	p("nan(local_now):", Chronos.nan(local_now))
	print("")
	p("sec_to_text_time_hhmmss(now):", Chronos.sec_to_text_time_hhmmss(now))
	p("sec_to_text_time_hhmmssd(now):", Chronos.sec_to_text_time_hhmmssd(now))
	print("")
	p("sec_to_text_time_hhmmss(local_now):", Chronos.sec_to_text_time_hhmmss(local_now))
	p("sec_to_text_time_hhmmssd(local_now):", Chronos.sec_to_text_time_hhmmssd(local_now))
	print("")
	p("sec_to_text_interval_hhmmss(now):", Chronos.sec_to_text_interval_hhmmss(now))
	print("")
	p("sec_to_text_interval_hhmmssd(now):", Chronos.sec_to_text_interval_hhmmssd(now))
	p("sec_to_text_interval_hhmmss(local_now):", Chronos.sec_to_text_interval_hhmmss(local_now))
	p("sec_to_text_interval_hhmmssd(local_now):", Chronos.sec_to_text_interval_hhmmssd(local_now))
	print("")
	for s in ['01:01:01','01:01:01.23','01:0101','00:00:01','00:00:01:2020','00:0hola0:012020','00:00:01jaja','1','12:12-5']:
		var res = Chronos.hhmmssd_to_sec(s)
		var txt = StringUtils.padr(str(res), 8, " ") + "secs    =    " + Chronos.sec_to_text_interval_hhmmssd(res)
		p("hhmmssd_to_sec('%s'):"%s, txt)
	get_tree().quit(0)
